#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.Dsda.WebRO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DsdaIntegrationRO")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblUploadSession(tblUploadSession instance);
    partial void UpdatetblUploadSession(tblUploadSession instance);
    partial void DeletetblUploadSession(tblUploadSession instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DsdaIntegrationROConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblUploadSession> tblUploadSessions
		{
			get
			{
				return this.GetTable<tblUploadSession>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUploadSessions")]
	public partial class tblUploadSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UploadSessionId;
		
		private System.DateTime _DateCreated;
		
		private int _TotalFilesCount;
		
		private int _UploadedFilesCount;
		
		private int _MovedFilesCount;
		
		private int _FailedFilesCount;
		
		private string _DealerId;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUploadSessionIdChanging(int value);
    partial void OnUploadSessionIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnTotalFilesCountChanging(int value);
    partial void OnTotalFilesCountChanged();
    partial void OnUploadedFilesCountChanging(int value);
    partial void OnUploadedFilesCountChanged();
    partial void OnMovedFilesCountChanging(int value);
    partial void OnMovedFilesCountChanged();
    partial void OnFailedFilesCountChanging(int value);
    partial void OnFailedFilesCountChanged();
    partial void OnDealerIdChanging(string value);
    partial void OnDealerIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public tblUploadSession()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadSessionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UploadSessionId
		{
			get
			{
				return this._UploadSessionId;
			}
			set
			{
				if ((this._UploadSessionId != value))
				{
					this.OnUploadSessionIdChanging(value);
					this.SendPropertyChanging();
					this._UploadSessionId = value;
					this.SendPropertyChanged("UploadSessionId");
					this.OnUploadSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFilesCount", DbType="Int NOT NULL")]
		public int TotalFilesCount
		{
			get
			{
				return this._TotalFilesCount;
			}
			set
			{
				if ((this._TotalFilesCount != value))
				{
					this.OnTotalFilesCountChanging(value);
					this.SendPropertyChanging();
					this._TotalFilesCount = value;
					this.SendPropertyChanged("TotalFilesCount");
					this.OnTotalFilesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedFilesCount", DbType="Int NOT NULL")]
		public int UploadedFilesCount
		{
			get
			{
				return this._UploadedFilesCount;
			}
			set
			{
				if ((this._UploadedFilesCount != value))
				{
					this.OnUploadedFilesCountChanging(value);
					this.SendPropertyChanging();
					this._UploadedFilesCount = value;
					this.SendPropertyChanged("UploadedFilesCount");
					this.OnUploadedFilesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovedFilesCount", DbType="Int NOT NULL")]
		public int MovedFilesCount
		{
			get
			{
				return this._MovedFilesCount;
			}
			set
			{
				if ((this._MovedFilesCount != value))
				{
					this.OnMovedFilesCountChanging(value);
					this.SendPropertyChanging();
					this._MovedFilesCount = value;
					this.SendPropertyChanged("MovedFilesCount");
					this.OnMovedFilesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedFilesCount", DbType="Int NOT NULL")]
		public int FailedFilesCount
		{
			get
			{
				return this._FailedFilesCount;
			}
			set
			{
				if ((this._FailedFilesCount != value))
				{
					this.OnFailedFilesCountChanging(value);
					this.SendPropertyChanging();
					this._FailedFilesCount = value;
					this.SendPropertyChanged("FailedFilesCount");
					this.OnFailedFilesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerId", DbType="NVarChar(10)")]
		public string DealerId
		{
			get
			{
				return this._DealerId;
			}
			set
			{
				if ((this._DealerId != value))
				{
					this.OnDealerIdChanging(value);
					this.SendPropertyChanging();
					this._DealerId = value;
					this.SendPropertyChanged("DealerId");
					this.OnDealerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
